{"version":3,"sources":["components/Layout/Layout.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Notification/Notification.js","components/Spiner/Spiner.js","components/Button/Button.js","components/Modal/Modal.js","services/picturesApi.js","components/App.js","index.js"],"names":["Layout","children","className","Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","largeImageURL","tags","onClick","src","alt","ImageGallery","images","map","key","Notification","message","Spiner","color","height","width","Button","Modal","handleKeyDown","code","onClose","window","addEventListener","removeEventListener","searchQuery","page","myAPIkey","axios","get","then","response","data","hits","App","loading","error","fetchPictures","picturesApi","prevState","catch","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","handleSearchFormSubmit","query","showModal","imageScr","closeModal","prevProps","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7e451c40.chunk.js","sourcesContent":["import React from 'react';\nimport './Layout.css';\n\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\n\nexport default Layout;","import React, { Component } from 'react';\nimport './Searchbar.css';\n\nexport default class Searchbar extends Component {\n  state = { inputValue: '' };\n\n  handleChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.inputValue);\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport T from 'prop-types';\nimport './ImageGalleryItem.css';\n\nexport default function ImageGalleryItem({\n  id,\n  webformatURL,\n  largeImageURL,\n  tags,\n  onClick,\n}) {\n  return (\n    <li\n      id={id}\n      className=\"ImageGalleryItem\"\n      onClick={() => onClick(largeImageURL)}\n    >\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  id: T.number.isRequired,\n  webformatURL: T.string.isRequired,\n  largeImageURL: T.string.isRequired,\n  tags: T.string.isRequired,\n  onClick: T.func.isRequired,\n};\n","import React from 'react';\nimport T from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport './ImageGallery.css';\n\nexport default function ImageGallery({ images, onClick }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          id={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n          onClick={onClick}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: T.arrayOf(Object).isRequired,\n  onClick: T.func.isRequired,\n};\n","import React from 'react';\n\nexport default function Notification(message) {\n  return <div>{message}</div>;\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Spiner() {\n  return <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={60} width={60} />;\n}\n","import React from 'react';\nimport './Button.css';\nimport T from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: T.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './Modal.css';\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Overlay\">\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst fetchPicturesWithQuery = (searchQuery, page = 1) => {\n  const myAPIkey = '14835218-5a07f5973194d6dde6acf6e17';\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${myAPIkey}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(response => response.data.hits);\n};\n\nexport default {\n  fetchPicturesWithQuery,\n};\n","import React, { Component } from 'react';\nimport Layout from './Layout';\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery';\nimport Notification from './Notification';\nimport Spiner from './Spiner';\nimport Button from './Button';\nimport Modal from './Modal';\nimport picturesApi from '../services/picturesApi';\n\nclass App extends Component {\n  state = {\n    images: [],\n    searchQuery: '',\n    page: 1,\n    loading: false,\n    error: null,\n    largeImageURL: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchPictures();\n    }\n  }\n\n  fetchPictures = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({ loading: true });\n\n    picturesApi\n      .fetchPicturesWithQuery(searchQuery, page)\n      .then(images =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({ loading: false });\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      });\n  };\n\n  handleSearchFormSubmit = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      images: [],\n    });\n  };\n\n  showModal = imageScr => {\n    this.setState({ largeImageURL: imageScr });\n  };\n\n  closeModal = () => {\n    this.setState({ largeImageURL: '' });\n  };\n\n  render() {\n    const { images, error, loading, largeImageURL } = this.state;\n    return (\n      <Layout>\n        <Searchbar onSubmit={this.handleSearchFormSubmit} />\n\n        {error && (\n          <Notification\n            message={`Whoops, something went wrong: ${error.message}`}\n          />\n        )}\n\n        {images.length > 0 && (\n          <ImageGallery images={images} onClick={this.showModal} />\n        )}\n        {loading && <Spiner />}\n\n        {images.length > 0 && !loading && (\n          <Button onClick={this.fetchPictures} />\n        )}\n\n        {largeImageURL.length > 0 && (\n          <Modal onClose={this.closeModal}>\n            <img src={largeImageURL} alt=\"\" />\n          </Modal>\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["components/Layout/Layout.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Notification/Notification.js","components/Spiner/Spiner.js","components/Button/Button.js","components/Modal/Modal.js","services/picturesApi.js","components/App.js","index.js"],"names":["Layout","children","className","Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","reset","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","largeImageURL","tags","onClick","src","alt","ImageGallery","images","map","key","Notification","message","Spiner","color","height","width","Button","Modal","handleKeyDown","code","onClose","handleOverlayClick","currentTarget","window","addEventListener","removeEventListener","myAPIkey","searchQuery","page","axios","get","then","response","data","hits","App","loading","error","fetchPictures","picturesApi","prevState","catch","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","handleSearchFormSubmit","query","showModal","imageScr","closeModal","prevProps","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9bd66e38.chunk.js","sourcesContent":["import React from 'react';\nimport './Layout.css';\n\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport './Searchbar.css';\n\nexport default class Searchbar extends Component {\n  state = { inputValue: '' };\n\n  handleChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.inputValue);\n    //this.setState({ inputValue: '' });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.inputValue}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport T from 'prop-types';\nimport './ImageGalleryItem.css';\n\nexport default function ImageGalleryItem({\n  id,\n  webformatURL,\n  largeImageURL,\n  tags,\n  onClick,\n}) {\n  return (\n    <li\n      id={id}\n      className=\"ImageGalleryItem\"\n      onClick={() => onClick(largeImageURL)}\n    >\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  id: T.number.isRequired,\n  webformatURL: T.string.isRequired,\n  largeImageURL: T.string.isRequired,\n  tags: T.string.isRequired,\n  onClick: T.func.isRequired,\n};\n","import React from 'react';\nimport T from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport './ImageGallery.css';\n\nexport default function ImageGallery({ images, onClick }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          id={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n          onClick={onClick}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: T.arrayOf(Object).isRequired,\n  onClick: T.func.isRequired,\n};\n","import React from 'react';\n\nexport default function Notification(message) {\n  return <div>{message}</div>;\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Spiner() {\n  return <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={60} width={60} />;\n}\n","import React from 'react';\nimport './Button.css';\nimport T from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: T.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './Modal.css';\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.handleOverlayClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst myAPIkey = '14835218-5a07f5973194d6dde6acf6e17';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nconst fetchPicturesWithQuery = (searchQuery, page = 1) => {\n  return axios\n    .get(\n      `${BASE_URL}?q=${searchQuery}&page=${page}&key=${myAPIkey}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(response => response.data.hits);\n};\n\nexport default {\n  fetchPicturesWithQuery,\n};\n","import React, { Component } from 'react';\nimport Layout from './Layout';\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery';\nimport Notification from './Notification';\nimport Spiner from './Spiner';\nimport Button from './Button';\nimport Modal from './Modal';\nimport picturesApi from '../services/picturesApi';\n\nclass App extends Component {\n  state = {\n    images: [],\n    searchQuery: '',\n    page: 1,\n    loading: false,\n    error: null,\n    largeImageURL: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchPictures();\n    }\n  }\n\n  fetchPictures = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({ loading: true });\n\n    picturesApi\n      .fetchPicturesWithQuery(searchQuery, page)\n      .then(images =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({ loading: false });\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      });\n  };\n\n  handleSearchFormSubmit = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      images: [],\n    });\n  };\n\n  showModal = imageScr => {\n    this.setState({ largeImageURL: imageScr });\n  };\n\n  closeModal = () => {\n    this.setState({ largeImageURL: '' });\n  };\n\n  render() {\n    const { images, error, loading, largeImageURL } = this.state;\n    return (\n      <Layout>\n        <Searchbar onSubmit={this.handleSearchFormSubmit} />\n\n        {error && (\n          <Notification\n            message={`Whoops, something went wrong: ${error.message}`}\n          />\n        )}\n\n        {images.length > 0 && (\n          <ImageGallery images={images} onClick={this.showModal} />\n        )}\n        {loading && <Spiner />}\n\n        {images.length > 0 && !loading && (\n          <Button onClick={this.fetchPictures} />\n        )}\n\n        {largeImageURL.length > 0 && (\n          <Modal onClose={this.closeModal}>\n            <img src={largeImageURL} alt=\"\" />\n          </Modal>\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}